type Query {
    ping: String!
    me: Me!
    latestPrice(assetSymbol: String!): PriceTick
    priceHistory24h(assetSymbol: String!): [PriceTick!]!
    currentPrice(assetSymbol: String!): PriceTick
    userTrades: [Trade!]!
    userTradesByAsset(assetSymbol: String!): [Trade!]!
    walletBalance: WalletBalance!
    walletTransactions: [WalletTransaction!]!
}

type Mutation {
    executeTrade(input: TradeInput!): TradeResult!
}

type Me {
    id: ID!
    email: String!
}

type PriceTick {
    assetSymbol: String!
    slot: Int!
    priceUsd: Float!
    sourceTsUtc: String!
    ingestedTsUtc: String!
    isCarry: Boolean!
}

type Trade {
    tradeId: ID!
    assetSymbol: String!
    side: TradeSide!
    quantity: Float!
    priceUsd: Float!
    executedAt: String!
    createdAt: String!
}

input TradeInput {
    assetSymbol: String!
    side: TradeSide!
    quantity: Float!
}

type TradeResult {
    tradeId: ID!
    executedAt: String!
    priceUsd: Float!
    assetSymbol: String!
    side: TradeSide!
    quantity: Float!
}

enum TradeSide {
    BUY
    SELL
}

type WalletBalance {
    currentBalance: Float!
    currency: String!
}

type WalletTransaction {
    txId: ID!
    type: WalletTransactionType!
    amountUsd: Float!
    note: String
    createdAt: String!
}

enum WalletTransactionType {
    DEPOSIT
    WITHDRAWAL
    ADJUSTMENT
    INITIAL_CREDIT
}